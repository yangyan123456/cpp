/*
 *  区分接口继承和实现继承
 *
 *  身为class设计者：
 *      有时希望derived class只继承成员函数的接口，在derived class中实现
 *      有时希望derived class同时继承函数的接口和实现
 *      有时希望derived class能够覆写函数的接口和实现
 *
 *  1.声明一个纯虚函数的目的就是为了让派生类只继承函数接口
 *
 *      问题：     如果在派生类中对定义好的虚函数没有实现，则派生类会默认继承父类的实现
 *
 *      解决方法： 将接口和实现分离：可以定义为接口纯虚函数，实现为一个protected非虚函数，
 *               这样派生类就不会继承父类的实现，而是自己实现，如果想调用父类中的默认方法，则需要使用转发函数
 *
 *               也可以在父类中实现接口纯虚函数的默认实现，在派生类中转发调用默认实现
 *
 *  2.声明非虚函数的目的就是为了让派生类继承函数的接口以及一份强制性实现
 *
 *      比如生成的每个子类的唯一标识符
 *
 *
 *
 *
 *
 */
